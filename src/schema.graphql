type Query {
  info: String!
  feed: [Routine!]
  myRoutines: [Routine!]
  exercises: [Exercise!]
  routine(id: String!): Routine
}

type Mutation {
  createRoutine(name: String!, description: String!, color: String!): Routine!
  createRoutineRevision(
    name: String!
    description: String!
    color: String!
  ): Routine!
  createExercise(
    name: String!
    description: String!
    format: String!
    muscleImpacts: [String!]
  ): Exercise!
  signup(username: String!, password: String!): AuthPayload
  login(username: String!, password: String!): AuthPayload
  cloneRoutineAtRevision(routineId: String!, revisionId: String!): Routine!
}

type Exercise {
  id: ID!
  name: String!
  description: String!
  format: Format!
  createdBy: User!
  muscleImpacts: [MuscleImpact]
}

type MuscleImpact {
  id: ID!
  impactRating: Int!
  muscle: Muscle!
}

type Format {
  name: String!
  description: String!
}

type Muscle {
  id: ID!
  name: String!
}

type SetGroupPlacement {
  id: ID!
  setGroup: SetGroup
  placement: Int
}

type SetGroup {
  id: ID!
  exercises: [Exercise]
  defaultNumSets: Int
}

type RoutineRevision {
  id: ID!
  setGroupPlacements: [SetGroupPlacement]
  routine: Routine
}

type Routine {
  id: ID!
  description: String!
  name: String!
  revisions: [RoutineRevision]
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  username: String!
  routines: [Routine!]!
}
