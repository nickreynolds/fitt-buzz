generator client {
  provider = "prisma-client-js"
}

///
datasource db {
  provider = "postgresql"
  url = "***"
}

model Exercise {
  createdAt     DateTime       @default(now())
  createdById   String?
  description   String
  formatId      String
  id            String         @id
  name          String
  createdBy     User?          @relation(fields: [createdById], references: [id])
  format        Format         @relation(fields: [formatId], references: [id])
  muscleImpacts MuscleImpact[]
  setGroups     SetGroup[]
}

model SetGroup {
  createdAt        DateTime          @default(now())
  createdById      String?
  id               String            @id
  createdBy        User?             @relation(fields: [createdById], references: [id])
  exercises        Exercise[] // usually will just have 1, but could have multiple to create "super sets"
  defaultNumSets   Int
  routineRevisions RoutineRevision[]
}

model RoutineRevision {
  createdAt   DateTime   @default(now())
  createdById String?
  id          String     @id
  createdBy   User?      @relation(fields: [createdById], references: [id])
  setGroups   SetGroup[]
  Routine     Routine?   @relation(fields: [routineId], references: [id])
  routineId   String?
}

model Routine {
  createdAt        DateTime          @default(now())
  createdById      String?
  id               String            @id
  createdBy        User?             @relation(fields: [createdById], references: [id])
  revisions        RoutineRevision[]
  name             String
  description      String
  cloneOf          Routine?          @relation("RoutineToRoutine", fields: [cloneOfRoutineId], references: [id])
  clones           Routine[]         @relation("RoutineToRoutine")
  cloneOfRoutineId String?
}

model Format {
  createdAt   DateTime     @default(now())
  description String
  id          String       @id
  name        String
  exercises   Exercise[]
  measurables Measurable[]
}

model Measurable {
  id      String   @id
  name    String
  formats Format[]
}

model Muscle {
  createdAt     DateTime       @default(now())
  description   String
  id            String         @id
  name          String
  muscleImpacts MuscleImpact[]
}

model MuscleImpact {
  id           String     @id
  impactRating Int
  muscleId     String
  muscle       Muscle     @relation(fields: [muscleId], references: [id])
  exercises    Exercise[]
}

model User {
  id              String            @id
  password        String
  username        String            @unique
  Exercise        Exercise[]
  SetGroup        SetGroup[]
  RoutineRevision RoutineRevision[]
  Routine         Routine[]
}
